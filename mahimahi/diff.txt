diff --git a/mahimahi/src/packet/dropping_packet_queue.cc b/mahimahi/src/packet/dropping_packet_queue.cc
index 7d15bde..8ae6f84 100644
--- a/mahimahi/src/packet/dropping_packet_queue.cc
+++ b/mahimahi/src/packet/dropping_packet_queue.cc
@@ -64,7 +64,6 @@ DroppingPacketQueue::DroppingPacketQueue( const string & args )
 QueuedPacket DroppingPacketQueue::dequeue( void )
 {
     assert( not internal_queue_.empty() );
-    cout << "dequeue" << endl;
 
     QueuedPacket ret = std::move( internal_queue_.front() );
     internal_queue_.pop();
diff --git a/mahimahi/src/packet/rcp_packet_queue.hh b/mahimahi/src/packet/rcp_packet_queue.hh
index e95a7bb..263d204 100644
--- a/mahimahi/src/packet/rcp_packet_queue.hh
+++ b/mahimahi/src/packet/rcp_packet_queue.hh
@@ -37,7 +37,6 @@ private:
     {
       const uint64_t * const data_ptr
         = reinterpret_cast<const uint64_t *>( str.data() ) + n;
-      std::cout << "substr " << n << str.substr(8*n, 8);
 
       return be64toh( *data_ptr );
     }
@@ -45,32 +44,17 @@ private:
     void put_header_field( const size_t pos, std::string & str, const uint64_t val)
     {
       uint64_t network_order = htobe64( val );
-      std::cout << network_order << std::endl;
-      std::cout << &network_order << std::endl;
       char ptr[8];
       ptr[7] = (uint8_t)(network_order>>56);
-      std::cout << ptr[7] << std::endl;
       ptr[6] = (uint8_t)(network_order>>48);
-      std::cout << ptr[6] << std::endl;
       ptr[5] = (uint8_t)(network_order>>40);
-      std::cout << ptr[5] << std::endl;
       ptr[4] = (uint8_t)(network_order>>32);
-      std::cout << ptr[4] << std::endl;
       ptr[3] = (uint8_t)(network_order>>24);
-      std::cout << ptr[3] << std::endl;
       ptr[2] = (uint8_t)(network_order>>16);
-      std::cout << ptr[2] << std::endl;
       ptr[1] = (uint8_t)(network_order>>8);
-      std::cout << ptr[1] << std::endl;
       ptr[0] = (uint8_t)(network_order>>0);
-      std::cout << ptr[0] << std::endl;
   
-      std::cout << ptr[0] << "," << ptr[1] << "," << ptr[2] << "," << ptr[3] << "," << ptr[4] << "," << "," << ptr[5] << "," << ptr[6] << "," << ptr[7] << std::endl;
-      std::cout << str.size() << std::endl;
-      std::cout << str << std::endl;
       str.replace(pos * 8, 8, ptr, 8);
-      std::cout << str.size() << std::endl;
-      std::cout << str << std::endl;
     }
 
     uint64_t running_avg(uint64_t var_sample, uint64_t var_last_avg, double gain)
@@ -102,18 +86,15 @@ public:
                         size_packets() + 1 ) ) {
             input_traffic_ += p.contents.size();
             uint64_t rtt = get_header_field( 11, p.contents ); /* 11 is rtt field */
-            std::cout << "rtt: " << rtt << std::endl;
             if (rtt > 0)
                 avg_rtt_ = running_avg(rtt, avg_rtt_, RTT_GAIN);
             
             checkStat();
             int64_t request = get_header_field( 12, p.contents ); /* 12 is rate field */
-            std::cout << "request: " << request << std::endl;
             if (request < 0 || request > flow_rate_)
                 put_header_field( 12, p.contents, 100);
 
             request = get_header_field( 12, p.contents ); /* 12 is rate field */
-            std::cout << "request: " << request << std::endl;
             accept( std::move( p ) );
         }
